<?php

function nm_activity_stream_theme($existing, $type, $theme, $path)
{
    return array(
        'nm_activity_stream_theme_single_activity' => array(
            'template' => 'single_activity',
            'path' => $path . '/templates',
            'type' => 'theme',
            'variables' => array(
                'user_realname' => NULL,
                'user_path' => NULL,
                'activity_title' => NULL,
                'activity_path' => NULL,
                'activity_type' => NULL,
                'activity_timestamp_create' => NULL,
                'activity_unread' => NULL
            ),
        ),
    );
}

function nm_activity_stream_preprocess_message(&$variables)
{

    $message = $variables['elements']['#entity'];

    //dpm($message);
    //dpm($variables);
    if (isset($message) && $message->type == 'message_new_node')
    {
        $ref_node_id = $message->field_message_node_ref[LANGUAGE_NONE][0]['target_id'];
        $ref_node = node_load($ref_node_id);

        $ref_user = user_load($ref_node->uid);

        $vars = array();

        $vars['user_realname'] = $ref_user->realname;
        $vars['user_path'] = $ref_user->uid;
        $vars['user_image'] =  strip_tags (   _nm_activity_stream_get_user_pic($ref_user), '<img>');
        $vars['activity_title'] = $ref_node->title;
        $vars['activity_path'] = 'node/' . $ref_node->nid;
        $vars['activity_type'] = $ref_node->type;
        $vars['activity_timestamp_create'] = $ref_node->created;
        $vars['activity_unread'] = _custom_general_get_num_unread(NULL, $ref_node->nid) ? TRUE : FALSE;
         


        $variables['message_new'] = theme('nm_activity_stream_theme_single_activity', $vars);
        //
        return;

        $html_user = l($ref_user->realname, 'user/' . $ref_user->uid);
        $output = 'hat ';
        $output_end = ' erstellt.';
        switch ($ref_node->type)
        {
            case NM_COURSE_FORUMTOPIC:
                $output .= "Neues Forenthema ";
                $output_end = 'verfügbar';
                break;
            case NM_COURSE_DOCS:
                $output .= "Neues Kursdokument ";
                $output_end = 'verfügbar';
                break;
            case NM_COURSE_GROUP:
                $output .= "Eine Kursgruppe ";
                break;
            case NM_COURSE_GENERIC_TASK:
                $output .= "Eine neue Aufgabe ";
                $output_end = 'wurde erstellt';
                break;
            case NM_COURSE_GENERIC_TASK_SOLUTION:
                $output .= "Eine neue Lösung ";
                $output_end = 'verfügbar';
                break;
            case NM_COURSE_NEWS:
                $output .= "Eine neue Ankündigung ";
                break;
        }

        $time_string = '<div>' . 'vor ' . format_interval(time() - $ref_node->created) . '</div>'; //format_date($node->created);
        $time_string = str_replace('Tage', 'Tagen', $time_string);

        $output .= $output_end;
        $output = '<div>' . $output . '</div>';

        //check if node is unread
        $unread = _custom_general_get_num_unread(NULL, $ref_node->nid) ? TRUE : FALSE;

        if ($unread)
        {
            //unread -> highlight
            $output .= '<div><strong>' . l($ref_node->title, 'node/' . $ref_node->nid) . '</strong></div>';
        } else
        {
            //read
            $output .= '<div>' . l($ref_node->title, 'node/' . $ref_node->nid) . '</div>';
        }
        $output .= $time_string;



        $variables['message_new'] = $output;
    }
}


/**
 * get user picture
 *
 * @param type $account_object
 */
function _nm_activity_stream_get_user_pic($account_object) {
  $realname = realname_load($account_object);
  if (empty($realname))
    $realname = $account_object->name;

  $profile = profile2_load_by_user($account_object, 'master');
  $user_pic = "";
  if (isset($profile->field_photo)) {
    $field_view = field_view_field('profile2', $profile, 'field_photo', array('settings' => array('image_style' => 'profile_stream_thumbnail')));
    $field_view['#label_display'] = 'hidden';
    $field_view[0]['#item']['title'] = $realname;
    $field_view[0]['#item']['alt'] = $realname;
    $user_pic = drupal_render($field_view);
  } 
  return $user_pic;
}
